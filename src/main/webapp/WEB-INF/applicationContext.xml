<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!-- XDI ENDPOINT REGISTRY AND TRANSPORT -->

	<bean id="UriMessagingContainerRegistry" class="xdi2.transport.registry.impl.uri.UriMessagingContainerRegistry" init-method="init" destroy-method="shutdown" />

	<bean id="HttpTransport" class="xdi2.transport.impl.http.HttpTransport" init-method="init" destroy-method="shutdown">
		<property name="uriMessagingContainerRegistry" ref="UriMessagingContainerRegistry" />
		<property name="interceptors">
			<util:list>
				<bean class="xdi2.transport.impl.http.interceptor.impl.DebugHttpTransportInterceptor" />
				<bean class="xdi2.transport.impl.http.interceptor.impl.StatusHttpTransportInterceptor" />
			</util:list>
		</property>
	</bean>

	<!-- SPRING -->

	<bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
		<property name="converters">
			<list>
				<bean class="xdi2.transport.spring.XDI2SpringConverter" />
			</list>
		</property>
	</bean>

	<!-- WEB SERVLET -->

	<bean id="ClientServlet" class="xdi2.connector.meeco.client.ClientServlet" init-method="init" destroy-method="destroy">
		<property name="graph" ref="graph1" />
		<property name="meecoApi" ref="meecoApi" />
		<property name="meecoMapping" ref="meecoMapping" />
	</bean>

	<!-- MEECO CONNECTOR -->

	<bean id="meecoMappingGraphfactory" class="xdi2.core.impl.wrapped.classpath.ClasspathWrapperGraphFactory">
		<property name="classpath" value="/xdi2/connector/meeco/mapping/mapping.xdi" />
		<property name="mimeType" value="text/xdi;ordered=1" />
	</bean>

	<bean id="meecoMappingGraph" factory-bean="meecoMappingGraphfactory" factory-method="openGraph" />

	<bean id="meecoContributor" class="xdi2.connector.meeco.contributor.MeecoContributor">
		<property name="meecoApi" ref="meecoApi" />
		<property name="meecoMapping" ref="meecoMapping" />
	</bean>

	<bean id="meecoApi" class="xdi2.connector.meeco.api.MeecoApi" init-method="init" destroy-method="destroy" />

	<bean id="meecoMapping" class="xdi2.connector.meeco.mapping.MeecoMapping" />

	<!-- MESSAGING CONTAINER at /graph -->
	<!-- MessagingContainer: GraphMessagingContainer backed by a MemoryGraph -->

	<bean id="graphfactory1" class="xdi2.core.impl.memory.MemoryGraphFactory">
	</bean>

	<bean id="graph1" factory-bean="graphfactory1" factory-method="openGraph">
		<constructor-arg><value>(=!:uuid:1111)</value></constructor-arg>
	</bean>

	<bean name="/graph" class="xdi2.messaging.container.impl.graph.GraphMessagingContainer">
		<property name="graph" ref="graph1" />
		<property name="interceptors">
			<util:list>
				<bean class="xdi2.messaging.container.interceptor.impl.BootstrapInterceptor">
					<property name="bootstrapOwner" value="=!:uuid:1111" />
					<property name="bootstrapOwnerSynonyms">
						<util:list>
							<value>=alice</value>
						</util:list>
					</property>
					<property name="bootstrapRootLinkContract" value="true" />
					<property name="bootstrapPublicLinkContract" value="true" />
				</bean>
				<bean class="xdi2.messaging.container.interceptor.impl.RefInterceptor" />
				<ref bean="meecoContributor" />
			</util:list>
		</property>
		<property name="contributors">
			<util:list>
				<bean id="generateKeyContributor" class="xdi2.messaging.container.contributor.impl.keygen.GenerateKeyContributor" />
				<ref bean="meecoContributor" />
			</util:list>
		</property>
	</bean>

	<!-- MESSAGING CONTAINER at /mapping -->
	<!-- MessagingContainer: GraphMessagingContainer -->

	<bean name="/mapping" class="xdi2.messaging.container.impl.graph.GraphMessagingContainer">
		<property name="graph" ref="meecoMappingGraph" />
	</bean>

</beans>
